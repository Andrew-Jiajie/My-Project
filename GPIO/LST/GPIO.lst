C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Output\GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\GPIO.C LARGE OPTIMIZE(4,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(
                    -FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\GPIO.lst) TABS(2) OBJECT(.\Output\GPIO.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 GPIO demo code
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "Music_control.h"
  22          #include "FFT.h"
  23          
  24          #define DEBUG 0
  25          #define HIGH 1
  26          #define LOW 0
  27          
  28          #define PLAYING 1
  29          #define STOP 0
  30          #define ON 1
  31          #define OFF 0
  32          #define SOURCE_TF 2
  33          #define SOURCE_FLASH 3
  34          #define MINIT   60
  35          
  36          
  37          #define SYS_VOLUME 35
  38          #define AUDIO_CTRL P01
  39          
  40          
  41          /*------------------------------------------------
  42          The main C function.  Program execution starts
  43          here after stack initialization.
  44          ------------------------------------------------*/
  45          
C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 2   

  46          #define setbit(x,y) x|=(1<<y) //将X的第Y位置1
  47          #define testbit(x,y) x&(1<<y) //测试X的第Y位置
  48          #define clrbit(x,y) x&=!(1<<y) //将X的第Y位清0
  49          
  50          int button_trig_state=HIGH;
  51          int play_trig_state=HIGH;
  52          int charge_trig_state=HIGH;
  53          
  54          int Button_state=-1;
  55          int Play_state=STOP;
  56          int Charge_state=OFF;
  57          int Reset_system=-1;
  58          void PinInterrupt_ISR (void) interrupt 7
  59          {
  60   1        if (testbit(PIF,7)) //SWITCH PIN
  61   1        {
  62   2          clrbit(PIF,7);
  63   2          Delay_1ms(1);
  64   2          if(button_trig_state==LOW && P17==LOW){
  65   3            Enable_BIT7_RasingEdge_Trig;
  66   3            button_trig_state=HIGH;
  67   3            Button_state=1;
  68   3            P11=1;
  69   3          }else if(button_trig_state==HIGH && P17==HIGH){
  70   3            Enable_BIT7_FallEdge_Trig;
  71   3            button_trig_state=LOW;
  72   3            Button_state=0;
  73   3            P11=0;
  74   3          }
  75   2          clr_PD;
  76   2        }
  77   1        if (testbit(PIF,2)) //BUSY PIN
  78   1        {
  79   2          clrbit(PIF,2);
  80   2          Delay_1ms(1); 
  81   2          if(play_trig_state==LOW && P12==LOW){
  82   3            Enable_BIT2_RasingEdge_Trig;
  83   3            play_trig_state=HIGH;
  84   3            Play_state=PLAYING;
  85   3            P11=1;
  86   3          }else if(play_trig_state==HIGH && P12==HIGH){
  87   3            Enable_BIT2_FallEdge_Trig;
  88   3            play_trig_state=LOW;
  89   3            Play_state=STOP;
  90   3            P11=0;
  91   3          }
  92   2          clr_PD;
  93   2        }
  94   1        if (testbit(PIF,3)) //USB PIN
  95   1        {
  96   2          clrbit(PIF,3);
  97   2          Delay_1ms(1);
  98   2          if(charge_trig_state==LOW && P13==LOW){
  99   3            Enable_BIT3_RasingEdge_Trig;
 100   3            charge_trig_state=HIGH;
 101   3            Charge_state=OFF;
 102   3            Reset_system=1;
 103   3            P11=0;
 104   3            Send_Data_To_UART0(0xcc);
 105   3          }else if(charge_trig_state==HIGH && P13==HIGH){
 106   3            Enable_BIT3_FallEdge_Trig;
 107   3            charge_trig_state=LOW;
C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 3   

 108   3            Charge_state=ON;
 109   3            Reset_system=-1;
 110   3            P11=1;
 111   3            Send_Data_To_UART0(0xdd);
 112   3          }
 113   2          //Send_Data_To_UART0(0xcc);
 114   2          clr_PD;
 115   2        }
 116   1        return;
 117   1      }
 118          
 119          unsigned long wake_time=0;
 120          unsigned long timer_count=0;
 121          int Power_state=ON;
 122          
 123          /*********************************************************************************************************
             -***
 124          *    TIMER 0 interrupt subroutine
 125          **********************************************************************************************************
             -**/
 126          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
 127          {
 128   1          clr_TF0;
 129   1          clr_TR0;                                    //Stop Timer0
 130   1              TL0 = LOBYTE(TIMER_DIV12_VALUE_40ms);     //Find  define in "Function_define.h" "TIMER VALUE"
 131   1              TH0 = HIBYTE(TIMER_DIV12_VALUE_40ms);
 132   1          set_TR0;                                    //Start Timer0
 133   1          timer_count+=40;
 134   1          if(timer_count >= 1000){
 135   2            timer_count=0;
 136   2            wake_time++;
 137   2          }
 138   1          //Send_Data_To_UART0(0xcc);
 139   1      }
 140          
 141          void audio_power_on()
 142          {
 143   1        int timeout=25; //500ms for timeout
 144   1        int chip_ready=-1;
 145   1        
 146   1        AUDIO_CTRL=LOW;
 147   1      
 148   1        while(timeout-- && chip_ready==-1){
 149   2          Delay_1ms(20);
 150   2          chip_ready=Specify_Volume(28);
 151   2        }
 152   1        Delay_1ms(150);
 153   1        Power_state=ON;
 154   1      }
 155          
 156          void audio_power_off()
 157          {
 158   1        int org_p06=P06;
 159   1        int org_p07=P07;
 160   1        clr_TR0;                                    //Stop Timer0
 161   1        wake_time=0;
 162   1        AUDIO_CTRL=HIGH;
 163   1        P03=0;
 164   1        P04=0;
 165   1        org_p06=P06;
 166   1        org_p07=P07;
 167   1        P06=0;
C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 4   

 168   1        P07=0;
 169   1        P12_Quasi_Mode;
 170   1        P12=0;
 171   1        Power_state=OFF;
 172   1        
 173   1        //Delay_1ms(1000);
 174   1        set_PD;         //go to sleep mode
 175   1        
 176   1        P12_Input_Mode;
 177   1        P06=org_p06;
 178   1        P07=org_p07;
 179   1        set_TR0;                                    //Timer0 run
 180   1        Delay_1ms(2);
 181   1        
 182   1      }
 183          
 184           void ADC_Finish()
 185          {
 186   1          int ADC_Count=0;
 187   1        Enable_ADC_AIN5;
 188   1          while(ADC_Count<=64)
 189   1          {
 190   2            Fft_Real[LIST_TAB[ADC_Count]]=get_adc()-256; //按LIST_TAB表里的顺序，进行存储 采样值,,
*** WARNING C206 IN LINE 190 OF Code\GPIO.C: 'get_adc': missing function-prototype
 191   2            //  ADC_CONTR = ADC_POWER | ADC_SPEEDHH| ADC_START | channel;   // 为了采集负电压，采用 偏置采集。电
             -压提高到1/2 vcc，，所以要减去256
 192   2            ADC_Count++;
 193   2          }
 194   1      }
 195          
 196          // led num range is 0~1024
 197          void LED_R(int num){
 198   1        PWM1H = HIBYTE(num);        
 199   1        PWM1L = LOBYTE(num);
 200   1        PWM1_OUTPUT_INVERSE;
 201   1        set_LOAD;
 202   1      }
 203          void LED_G(int num){
 204   1        PWM3H = HIBYTE(num);        
 205   1        PWM3L = LOBYTE(num);
 206   1        PWM3_OUTPUT_INVERSE;
 207   1        set_LOAD;
 208   1      }
 209          void LED_B(int num){
 210   1        PWM2H = HIBYTE(num);        
 211   1        PWM2L = LOBYTE(num);
 212   1        PWM2_OUTPUT_INVERSE;
 213   1        set_LOAD;
 214   1      }
 215          void init_LED(){
 216   1        PWM1_P14_OUTPUT_ENABLE;
 217   1        PWM3_P00_OUTPUT_ENABLE;
 218   1        PWM2_P05_OUTPUT_ENABLE;
 219   1      
 220   1        PWM_IMDEPENDENT_MODE;
 221   1        PWM_CLOCK_DIV_8;
 222   1        PWMPH = 0x07;
 223   1        PWMPL = 0xCF;
 224   1        
 225   1        LED_R(0);
 226   1        LED_G(0);
 227   1        LED_B(0);
C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 5   

 228   1        set_PWMRUN;
 229   1      }
 230          //-----------------------------------------------------------------------------------
 231          
 232          int get_adc(void)
 233          {
 234   1        clr_ADCF;
 235   1        set_ADCS;                 // ADC start trig signal
 236   1        while(ADCF == 0);
 237   1          return (int)(ADCRH<<2) + (int)((ADCRL&0x0f)>>2);//(((int)ADCRH)<<4+ADCRL&0x0f);
 238   1      }
 239          
 240          int Head_Music_Play=0;
 241          int Body_Music_Play=0;
 242          void main (void) 
 243          {
 244   1        int music_num=1;
 245   1        int play_state=-1;
 246   1        
 247   1        //set_PD;                 //powerdown directly 131.5uA
 248   1        Set_All_GPIO_Quasi_Mode;          // Define in Function_define.h
 249   1        P11=0;
 250   1        P01_PushPull_Mode;
 251   1      #if 1 
 252   1        AUDIO_CTRL=1;
 253   1        Delay_1ms(500);
 254   1        InitialUART0_Timer1(9600);
 255   1        Send_Data_To_UART0(0xaa);
 256   1        Send_Data_To_UART0(0xaa);
 257   1        Send_Data_To_UART0(0xaa);
 258   1        set_CLOEN; 
 259   1        audio_power_on();
 260   1      #endif
 261   1      
 262   1      #if 1
 263   1        TIMER0_MODE0_ENABLE;                        //Timer 0 and Timer 1 mode configuration
 264   1        clr_T0M;
 265   1          TMOD |= 0x01;                               //Timer0 is 16-bit mode
 266   1          TL0 = LOBYTE(TIMER_DIV12_VALUE_40ms);     //Find  define in "Function_define.h" "TIMER VALUE"
 267   1          TH0 = HIBYTE(TIMER_DIV12_VALUE_40ms);
 268   1        set_ET0;                                    //enable Timer0 interrupt
 269   1        set_EA;                                     //enable interrupts
 270   1        set_TR0;                                    //Timer0 run
 271   1      #endif
 272   1      
 273   1      #if 1
 274   1        //Switch detect
 275   1        P17_Input_Mode;
 276   1        set_P0S_7;
 277   1        Enable_BIT7_FallEdge_Trig;
 278   1        button_trig_state=LOW;
 279   1        
 280   1        //USB detect
 281   1        P13_Input_Mode;
 282   1        set_P0S_3;
 283   1        Enable_BIT3_RasingEdge_Trig;
 284   1        charge_trig_state=HIGH;
 285   1        
 286   1        //audio BUSY pin
 287   1        P12_Input_Mode;
 288   1        set_P0S_2;
 289   1        Enable_BIT2_FallEdge_Trig;
C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 6   

 290   1        play_trig_state=LOW;
 291   1      
 292   1        Enable_INT_Port1;
 293   1        set_EPI;              // Enable pin interrupt
 294   1        set_EX0;
 295   1        set_EA;               // global enable bit
 296   1      
 297   1      #endif
 298   1        init_LED();
 299   1        //Delay_1ms(1000);
 300   1        Specify_Volume(SYS_VOLUME);
 301   1        //Specify_Volume(5);
 302   1        while(0){
 303   2          audio_power_on();
 304   2          Delay_1ms(1000);
 305   2          Specify_Volume(SYS_VOLUME);
 306   2          //Play_body_music();
 307   2          Control_CMD(music_next, sizeof(music_next));
 308   2          Delay_1ms(5000);
 309   2          audio_power_off();
 310   2          Delay_1ms(1000);
 311   2        }
 312   1        while(1){
 313   2          //set_PD;         //powerdown here can be 145.8uA
 314   2      
 315   2          if(Button_state==1 && Charge_state==OFF){
 316   3            Button_state=-1;
 317   3            if(Power_state==OFF){
 318   4              audio_power_on();
 319   4              Specify_Volume(SYS_VOLUME);
 320   4            }
 321   3            Play_head_music();
 322   3            //Head_Music_Play=1;
 323   3            Body_Music_Play=0;
 324   3          }
 325   2          if(Button_state==0 && Charge_state==OFF){
 326   3            Button_state=-1;
 327   3            Body_Music_Play=1;
 328   3          }
 329   2          if(Play_state==PLAYING){
 330   3            int i=0;
 331   3            int red=0, green=0, blue=0;
 332   3            set_PWMRUN;
 333   3            ADC_Finish();
 334   3            FFT();
 335   3      #if 0
                      for(i=0; i<16; i++){
                        Send_Data_To_UART0(LED_TAB[i]);
                      }
                    Send_Data_To_UART0('\n');
              #endif
 341   3            red=LED_TAB[1]+LED_TAB[2]+LED_TAB[3]+LED_TAB[4]+LED_TAB[5];
 342   3            green=LED_TAB[6]+LED_TAB[7]+LED_TAB[8]+LED_TAB[9]+LED_TAB[10];
 343   3            blue=LED_TAB[11]+LED_TAB[12]+LED_TAB[13]+LED_TAB[14]+LED_TAB[15];
 344   3            red=red*3;
 345   3            green=green*3;
 346   3            green=green*3;
 347   3            LED_R(red);
 348   3            LED_G(green);
 349   3            LED_B(blue);
 350   3              wake_time = 0;
 351   3            //set_IDL;
C51 COMPILER V9.53.0.0   GPIO                                                              02/04/2018 22:43:56 PAGE 7   

 352   3          }
 353   2          if(Play_state==PLAYING && Charge_state==ON){
 354   3            Stop_music();
 355   3          }
 356   2          if(Play_state==STOP){
 357   3            LED_R(0);
 358   3            LED_G(0);
 359   3            LED_B(0);
 360   3            set_IDL;
 361   3          }
 362   2          if(Reset_system==1 && Play_state==STOP){
 363   3            Delay_1ms(500);       //Add delay 600ms, in case USB connection problem.
 364   3            if(Reset_system==1){
 365   4              Reset_system=-1;
 366   4              SW_Reset();
*** WARNING C206 IN LINE 366 OF Code\GPIO.C: 'SW_Reset': missing function-prototype
 367   4            }
 368   3          }
 369   2      
 370   2          if(Charge_state==ON && Power_state==OFF){
 371   3            audio_power_on();
 372   3            Specify_Volume(SYS_VOLUME);
 373   3          }
 374   2          if(Play_state==STOP && Charge_state==OFF && wake_time > MINIT)
 375   2          {
 376   3            Send_Data_To_UART0(0xaa);
 377   3            audio_power_off();
 378   3          }
 379   2          if(Charge_state==ON && wake_time > MINIT*20)  //power off audio, to make sure device can charge to full.
 380   2          {
 381   3            Send_Data_To_UART0(0xbb);
 382   3            audio_power_off();
 383   3          }
 384   2      #if 0
                  if(Play_state==STOP && Head_Music_Play==1){
                    Head_Music_Play=0;
                  }
              #endif
 389   2          if(Play_state==STOP && Body_Music_Play==1){
 390   3            if(Power_state==ON){
 391   4              Play_body_music();
 392   4            }
 393   3            Body_Music_Play=0;
 394   3          }
 395   2        }
 396   1      }
*** WARNING C290 IN LINE 126 OF Code\GPIO.C: missing return value
*** WARNING C290 IN LINE 138 OF Code\GPIO.C: missing return value
*** WARNING C294 IN LINE 303 OF Code\GPIO.C: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5086    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    652      68
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
